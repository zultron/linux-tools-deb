From: Ben Hutchings <ben@decadent.org.uk>
Subject: tools/hv: Fix string types

Standard C strings are arrays of char, not __u8 (unsigned char).
Declare variables and parameters accordingly, and add the necessary
casts.

Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
---
--- a/tools/hv/hv_kvp_daemon.c
+++ b/tools/hv/hv_kvp_daemon.c
@@ -85,8 +85,8 @@
 #define ENTRIES_PER_BLOCK 50
 
 struct kvp_record {
-	__u8 key[HV_KVP_EXCHANGE_MAX_KEY_SIZE];
-	__u8 value[HV_KVP_EXCHANGE_MAX_VALUE_SIZE];
+	char key[HV_KVP_EXCHANGE_MAX_KEY_SIZE];
+	char value[HV_KVP_EXCHANGE_MAX_VALUE_SIZE];
 };
 
 struct kvp_file_state {
@@ -94,7 +94,7 @@
 	int num_blocks;
 	struct kvp_record *records;
 	int num_records;
-	__u8 fname[MAX_FILE_NAME];
+	char fname[MAX_FILE_NAME];
 };
 
 static struct kvp_file_state kvp_file_info[KVP_POOL_COUNT];
@@ -209,7 +209,7 @@
 	int ret, fd;
 	FILE *filep;
 	size_t records_read;
-	__u8 *fname;
+	char *fname;
 	struct kvp_record *record;
 	struct kvp_record *readp;
 	int num_blocks;
@@ -281,7 +281,7 @@
 	return 0;
 }
 
-static int kvp_key_delete(int pool, __u8 *key, int key_size)
+static int kvp_key_delete(int pool, const char *key, int key_size)
 {
 	int i;
 	int j, k;
@@ -324,8 +324,8 @@
 	return 1;
 }
 
-static int kvp_key_add_or_modify(int pool, __u8 *key, int key_size, __u8 *value,
-			int value_size)
+static int kvp_key_add_or_modify(int pool, const char *key, int key_size,
+				 const char *value, int value_size)
 {
 	int i;
 	int j, k;
@@ -379,8 +379,8 @@
 	return 0;
 }
 
-static int kvp_get_value(int pool, __u8 *key, int key_size, __u8 *value,
-			int value_size)
+static int kvp_get_value(int pool, const char *key, int key_size,
+			 char *value, int value_size)
 {
 	int i;
 	int num_records;
@@ -411,8 +411,8 @@
 	return 1;
 }
 
-static void kvp_pool_enumerate(int pool, int index, __u8 *key, int key_size,
-				__u8 *value, int value_size)
+static void kvp_pool_enumerate(int pool, int index, char *key, int key_size,
+			       char *value, int value_size)
 {
 	struct kvp_record *record;
 
@@ -804,27 +804,27 @@
 
 		case KVP_OP_SET:
 			if (kvp_key_add_or_modify(hv_msg->kvp_hdr.pool,
-					hv_msg->body.kvp_set.data.key,
+					(const char *)hv_msg->body.kvp_set.data.key,
 					hv_msg->body.kvp_set.data.key_size,
-					hv_msg->body.kvp_set.data.value,
+					(const char *)hv_msg->body.kvp_set.data.value,
 					hv_msg->body.kvp_set.data.value_size))
-				strcpy(hv_msg->body.kvp_set.data.key, "");
+				hv_msg->body.kvp_set.data.key[0] = 0;
 			break;
 
 		case KVP_OP_GET:
 			if (kvp_get_value(hv_msg->kvp_hdr.pool,
-					hv_msg->body.kvp_set.data.key,
+					(const char *)hv_msg->body.kvp_set.data.key,
 					hv_msg->body.kvp_set.data.key_size,
-					hv_msg->body.kvp_set.data.value,
+					(char *)hv_msg->body.kvp_set.data.value,
 					hv_msg->body.kvp_set.data.value_size))
-				strcpy(hv_msg->body.kvp_set.data.key, "");
+				hv_msg->body.kvp_set.data.key[0] = 0;
 			break;
 
 		case KVP_OP_DELETE:
 			if (kvp_key_delete(hv_msg->kvp_hdr.pool,
-					hv_msg->body.kvp_delete.key,
+					(const char *)hv_msg->body.kvp_delete.key,
 					hv_msg->body.kvp_delete.key_size))
-				strcpy(hv_msg->body.kvp_delete.key, "");
+				hv_msg->body.kvp_delete.key[0] = 0;
 			break;
 
 		default:
@@ -842,9 +842,9 @@
 		if (hv_msg->kvp_hdr.pool != KVP_POOL_AUTO) {
 			kvp_pool_enumerate(hv_msg->kvp_hdr.pool,
 					hv_msg->body.kvp_enum_data.index,
-					hv_msg->body.kvp_enum_data.data.key,
+					(char *)hv_msg->body.kvp_enum_data.data.key,
 					HV_KVP_EXCHANGE_MAX_KEY_SIZE,
-					hv_msg->body.kvp_enum_data.data.value,
+					(char *)hv_msg->body.kvp_enum_data.data.value,
 					HV_KVP_EXCHANGE_MAX_VALUE_SIZE);
 			goto kvp_done;
 		}
